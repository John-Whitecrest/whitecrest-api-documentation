FORMAT: 1A
HOST: http://harvesters.whitecrestmushrooms.com/

# Whitecrest Mushrooms

This API lists all the harvesters associated with a site, sends information about hardware status, and shows data about picking, packing, and mushroom growing.

## Endpoints and API Access

For ItemPath (or any other application) to access data from the harvester, an endpoint structure will need to be set up. Either the harvesters each will need to be connected to the internet and have an endpoint where this API is accesible, or each site will need to have a global processor to take data from the harvesters and provide a single endpoint to connect to.

## Core Concepts & Routes

* *Harvester:* A harvester is a single unit consisting of a lift, cart, scale and a packer. Inside a harvester there are mushrooms growing on beds, spread over many different vertical levels.
    * *Packer:*
    * *Scale:*
    * *Lift:*
    * *Picker:* The robotic arm that grabs mushrooms off of a bed and brings them to a packer.
* *Level:* A level is a collection of beds stacked vertically in a a harvester.
* *Bed:* A bed is a soil area on a level where mushrooms are grown.

# Group Harvesters

A harvester is a single unit consisting of a lift, cart, scale and a packer. Inside a harvester there are mushrooms growing on beds, spread over many different vertical levels.

## Harvesters Collection [/harvesters]


### List all Harvesters [GET]

This route displays all Harvesters on a site, and includes their name, ID, and status.

+ Attributes
    + id (number) - ID of the harvester in the form of an integer
    + name (string) - Descriptor of the harvester
    

+ Response 200 (application/json)

        [
            {
                "name": "Harvester1",
                "id": 1,
                "status": 1,
            },
            {
                "name": "Harvester2",
                "id": 2,
                "status": 0,
            },
        ]

## Harvester [/harvesters/{id}]

+ Parameters
    + id (number) - ID of the harvester in the form of an integer


+ Attributes
    + id (number) - ID of the harvester in the form of an integer
    + status (enum[number])
        Status of the harvester in the form of an integer
        + 0: inactive
        + 1: active
    + name (string) - Descriptor of the harvester
    + level_id (number) - ID of the level the harvester is positioned at
    + bed_id (number) - ID of the bed the harvester is positioned at
    + levels (number) - the number of levels in the harvester 

### Show a Harvester [GET]

This route exposes a single Harvester, shows the current level and bed position, and shows the status.

+ Request (application/json)

        {
            "id": 1,
        }

+ Response 200 (application/json)

    + Body
        
            {
                "name": "Harvester1",
                "level_id": 10,
                "bed_id": 40,
            }

# Group Levels

A level is a collection of beds stacked vertically in a a harvester.

## Level [/levels/{id}]


+ Parameters
    + id (number) - The ID of the desired level.

+ Attributes (object)
    + id: 1 (number, required)
    + position: 0 (number, required) - vertical location of level 
    + beds: [1,2,3,4] (array[number]) - array of bed ID's in level

### Retrieve a Level [GET]
Retrieves the level with the given ID.

+ Response 200 (application/json)
    + Attributes (Level)

## Levels [/harvester/{harvester_id}/levels{?limit}]

+ Attributes (array[Level])

### List all Levels [GET]
Returns a list of your Levels on a specific harvester, in order of position.

+ Parameters
    + harvester_id (number) - the ID of the harvester.
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `25`

+ Response 200 (application/json)
    + Attributes (Levels)

# Group Beds

A bed is a soil area on a level where mushrooms are grown.

## Bed [/beds/{id}]


+ Parameters
    + id (number) - The ID of the desired bed.

+ Attributes (object)
    + id: 1 (number, required)
    + position: 0 (number, required) - horizontal location of bed on a level
    + width: 24 (number) - width of bed in cm
    + height: 96 (number) - height of bed in cm 
    + level_id: 1 (number) - the ID of the level the bed is located on
    + ph: 8 (number) - the current pH level
    + temperature: 276 (number) - the current temperature

### Retrieve a Bed [GET]
Retrieves the level with the given ID.

+ Response 200 (application/json)
    + Attributes (Bed)

## Beds [/beds{?limit}]

+ Attributes (array[Bed])

### List all Beds [GET]
Returns a list of your Beds.

+ Parameters
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `25`

+ Response 200 (application/json)
    + Attributes (Beds)

# Group Mushrooms

A mushroom is located on a bed, in a level, and on a harvester.

## Mushroom [/mushrooms/{id}]


+ Parameters
    + id (number) - The ID of the desired mushroom.

+ Attributes (object)
    + id: 1 (number, required)
    + x-coordinate: 14 (number, required) - x position on bed
    + y-coordinate: 35 (number, required) - y position on bed
    + size: 3 (number)
    + rotation: 264 (number) - rotation in degrees
    + is_cluster: true (boolean)
    + maturity_time: 15593060634745 (number) - date stamp of when the mushroom is ready to be picked

### Retrieve a Mushroom [GET]
Retrieves the level with the given ID.

+ Response 200 (application/json)
    + Attributes (Mushroom)

## Mushrooms [/mushrooms{?limit}]

+ Attributes (array[mushrooms])

### List all Mushrooms [GET]
Returns a list of your Beds.

+ Parameters
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 500 items.

        + Default: `50`

+ Response 200 (application/json)
    + Attributes (Mushrooms)